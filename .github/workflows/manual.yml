# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      rcBranch:
        description: 'Source branch to build'
        required: true
        type: string
      tagName:
        description: 'Tag name to create'
        required: true
        type: string
      pervTagName:
        description: 'Previous tag name to create'
        required: false
        type: string
      nextRcBranch:
        description: 'Next branch to build'
        required: true
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  createTag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          ref: ${{ inputs.rcBranch }}

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "<github-actions@users.noreply.github.com>"

      - name: Validate inputs
        run: |
          echo "RC Branch: ${{ inputs.rcBranch }}"
          echo "Tag Name: ${{ inputs.tagName }}"
          echo "Next RC Branch: ${{ inputs.nextRcBranch }}"
          # Ensure the tag name is valid
          if [[ ! "${{ inputs.tagName }}" =~ ^[a-zA-Z0-9._-]+$ ]]; then
            echo "\033[31mInvalid tag name: ${{ inputs.tagName }}\033[0m"
            exit 1
          fi
          # Ensure the branch exists
          if ! git show-ref --verify --quiet refs/heads/${{ inputs.rcBranch }}; then
            echo "\033[31mBranch ${{ inputs.rcBranch }} does not exist.\033[0m"
            exit 1
          fi
          # Ensure the tag does not already exist
          if git tag -l | grep -q "${{ inputs.tagName }}"; then
            echo "\033[31mTag ${{ inputs.tagName }} already exists.\033[0m"
            exit 1
          fi

      - name: Create tag
        run: |
          # Create the tag
          echo "Creating tag ${{ inputs.tagName }} on branch ${{ inputs.rcBranch }}"
          git fetch origin ${{ inputs.rcBranch }}
          git checkout ${{ inputs.rcBranch }}
          git pull origin ${{ inputs.rcBranch }}
          git log | head -n 10
          git tag -a ${{ inputs.tagName }} -m "Release ${{ inputs.tagName }}"
          git push origin ${{ inputs.tagName }}
        
      - name: Create github release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tagName }}
          release_name: "${{ inputs.tagName }}"
          body: "Release notes for ${{ inputs.tagName }}"
          generate_release_notes: true
          make_latest: true
          draft: true
          prerelease: false
          # token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge RC to main
        run: |
          git fetch origin master
          git checkout master
          git pull origin master
          git log | head -n 10
          git merge --no-ff ${{ inputs.rcBranch }} -m "Sync after ${{ inputs.tagName }}" || export MERGE_TO_MASTER_FAILED=TRUE
          if [ -n "$MERGE_TO_MASTER_FAILED" ]; then
            echo "\033[31mMerge to master failed, please resolve conflicts manually.\033[0m"
            exit -1
          else
            git push origin master
            echo "\033[32mMerge to master successful.\033[0m"
          fi

      - name: Create next RC branch
        run: |
          # check if next RC branch exists, if not create it
          exists=$(git branch -r | grep "origin/${{ inputs.nextRcBranch }}")
          if [ -z "$exists" ]; then
            echo "Next RC branch does not exist, creating it."
            git fetch origin ${{ inputs.nextRcBranch }} || true
            git checkout master
            git pull origin master
            git log | head -n 10
            git checkout -b ${{ inputs.nextRcBranch }} || true
            git push origin ${{ inputs.nextRcBranch }} || true
          else
            echo "\033[32mNext RC branch already exists, skipping creation.\033[0m"
          fi

      - name: Merge master to next RC branch
        run: |
          git fetch origin ${{ inputs.nextRcBranch }}
          git checkout ${{ inputs.nextRcBranch }}
          git pull origin ${{ inputs.nextRcBranch }}
          git log | head -n 10
          git merge --no-ff master -m "Sync after ${{ inputs.tagName }}" || export MERGE_TO_RC_FAILED=TRUE
          if [ -n "$MERGE_TO_RC_FAILED" ]; then
            echo "\033[31mMerge to next RC branch failed, please resolve conflicts manually.\033[0m"
          else
            echo "\033[32mMerge to next RC branch successful.\033[0m"
            git push origin ${{ inputs.nextRcBranch }}
          fi

      - name: Create pull request to master
        uses: peter-evans/create-pull-request@v7
        if: env.MERGE_TO_RC_FAILED == 'TRUE'
        with:
          branch: ${{ inputs.nextRcBranch }}
          title: "Sync after ${{ inputs.tagName }}"
          body: "This PR merges changes from ${{ inputs.rcBranch }} into rc after creating tag ${{ inputs.tagName }}."
          base: master
          commit-message: "Merge ${{ inputs.rcBranch }} into rc after tag ${{ inputs.tagName }}"
          # token: ${{ secrets.GITHUB_TOKEN }}

